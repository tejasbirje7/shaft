spring:
  elasticsearch:
    uris: http://localhost:9200
    host: localhost
    port: 9200
    username: elastic
    password: 5o1NwRcarr=bpvh*kaX8
  jackson:
    default-property-inclusion: non_null
  application:
    name: EVENT-INGESTION
  main:
    web-application-type: reactive
  devtools:
    restart:
      enabled: true

eureka:
  client:
    service-url: { defaultZone : http://localhost:8761/eureka/ }
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    lease-expiration-duration-in-seconds: 60
    lease-renewal-interval-in-seconds: 60
    instance-id: ${spring.application.name}:${random.value}


server:
  port: 8181
retry-config:
  initial-interval-ms: 1000
  max-interval-ms: 10000
  multiplier: 2.0
  maxAttempts: 3
  sleep-time-ms: 2000

kafka-config:
  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://localhost:8081
  topic-name: track-event
  topic-names-to-create:
    - track-event
  num-of-partitions: 3
  replication-factor: 3

kafka-producer-config:
  key-serializer-class: org.apache.kafka.common.serialization.LongSerializer
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
  compression-type: snappy
  enable-idempotence: true
  acks: all
  batch-size: 16384
  batch-size-boost-factor: 100
  linger-ms: 5
  request-timeout-ms: 60000
  retry-count: 5

JAVA_OPTS : "-Xms128m -Xmx256m"
